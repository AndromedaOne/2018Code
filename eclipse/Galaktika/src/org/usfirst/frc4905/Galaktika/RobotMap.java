// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4905.Galaktika;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import Utilities.NavxGyro;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTrainLeftTopTalon;
    public static WPI_TalonSRX driveTrainLeftBottomTalon;
    public static SpeedControllerGroup driveTrainLeftSpeedController;
    public static WPI_TalonSRX driveTrainRightTopTalon;
    public static WPI_TalonSRX driveTrainRightBottomTalon;
    public static SpeedControllerGroup driveTrainRightSpeedController;
    public static DifferentialDrive driveTrainDifferentialDrive;
    public static Compressor driveTrainCompressor;
    public static Ultrasonic driveTrainFrontUltrasonic;
    public static SpeedController intakeLeftController;
    public static SpeedController intakeRightController;
    public static Solenoid rampsSolenoid1;
    public static Solenoid rampsSolenoid2;
    public static Solenoid rampsSolenoid3;
    public static Solenoid rampsSolenoid4;
    public static WPI_TalonSRX elevatorElevatorContoller;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static NavxGyro navX;
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftTopTalon = new WPI_TalonSRX(1);
        
        
        driveTrainLeftBottomTalon = new WPI_TalonSRX(2);
        
        
        driveTrainLeftSpeedController = new SpeedControllerGroup(driveTrainLeftTopTalon, driveTrainLeftBottomTalon  );
        driveTrainLeftSpeedController.setName("DriveTrain", "LeftSpeedController");
        driveTrainRightTopTalon = new WPI_TalonSRX(3);
        
        
        driveTrainRightBottomTalon = new WPI_TalonSRX(4);
        
        
        driveTrainRightSpeedController = new SpeedControllerGroup(driveTrainRightTopTalon, driveTrainRightBottomTalon);
        driveTrainRightSpeedController.setName("DriveTrain", "RightSpeedController");
        
        driveTrainDifferentialDrive = new DifferentialDrive(driveTrainLeftSpeedController, driveTrainRightSpeedController);
        driveTrainRightSpeedController.setName("DriveTrain", "DifferentialDrive");
        driveTrainDifferentialDrive.setSafetyEnabled(true);
        driveTrainDifferentialDrive.setExpiration(0.1);
        driveTrainDifferentialDrive.setMaxOutput(1.0);

        driveTrainCompressor = new Compressor(0);
        driveTrainRightSpeedController.setName("DriveTrain", "Compressor");
        
        driveTrainFrontUltrasonic = new Ultrasonic(0, 1);
        driveTrainFrontUltrasonic.setName("DriveTrain", "FrontUltrasonic");
        
        intakeLeftController = new VictorSP(0);
        driveTrainRightSpeedController.setName("Intake", "LeftController");
        intakeLeftController.setInverted(false);
        intakeRightController = new VictorSP(1);
        driveTrainRightSpeedController.setName("Intake", "RightController");
        intakeRightController.setInverted(false);
        rampsSolenoid1 = new Solenoid(0, 0);
        driveTrainRightSpeedController.setName("Ramps", "Solenoid1");
        
        rampsSolenoid2 = new Solenoid(0, 1);
        driveTrainRightSpeedController.setName("Ramps", "Solenoid2");
        
        rampsSolenoid3 = new Solenoid(0, 2);
        driveTrainRightSpeedController.setName("Ramps", "Solenoid3");
        
        rampsSolenoid4 = new Solenoid(0, 3);
        driveTrainRightSpeedController.setName("Ramps", "Solenoid4");
        
        elevatorElevatorContoller = new WPI_TalonSRX(5);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        navX = new NavxGyro();
        
        
    }
}
